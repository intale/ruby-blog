.block
  .secondary-navigation
    %ul.wat-cf
      %li.first.active= link_to "#{t("web-app-theme.list", :default => "List")}", administration_admins_path
      %li= link_to "#{t("web-app-theme.new", :default => "New")}", new_administration_admin_path
  .content
    %h2.title
      = t("web-app-theme.all", :default => "All")
      Admins
    .inner
      %table.table
        %tr
          %th.first= sort_link @search, :id, "ID"
          %th= sort_link @search, :nick, t("activerecord.attributes.administration_admin.nick", :default => t("activerecord.labels.nick", :default => "Nick"))
          %th= sort_link @search, :locked_at, t("web-app-theme.created_at", :default => t("activerecord.labels.locked", :default => "Enabled"))
          %th= sort_link @search, :created_at, t("web-app-theme.created_at", :default => "Created at")
          %th.last &nbsp;
        - @admins.each do |admin|
          %tr{:class => cycle("odd", "even")}
            %td
              = admin.id
            %td
              = link_to admin.nick, administration_admin_path(admin)
            %td
              = admin.locked_at? ? "Disabled":""
            %td
              = l(admin.created_at, :format => :long)
            %td.last
              = link_to "#{t("web-app-theme.show", :default => "Show")}", administration_admin_path(admin)
              |
              \#{link_to "#{t("web-app-theme.edit", :default => "Edit")}", edit_administration_admin_path(admin)}
              -if current_admin.superadmin?   &&  !admin.superadmin?
                |
                \#{link_to "#{t("web-app-theme.delete", :default => admin.locked_at? ? "Enable" : "Disable")}", disable_administration_admin_path(admin), :confirm => "#{t("web-app-theme.confirm", :default => "Are you sure?")}"}
                |
                \#{link_to "#{t("web-app-theme.delete", :default => "Delete")}", administration_admin_path(admin), :method => :delete, :confirm => "#{t("web-app-theme.confirm", :default => "Are you sure?")}"}
      .actions-bar.wat-cf
        .actions
- content_for :sidebar, render(:partial => 'sidebar')
